/**
 * @brief  有向非巡回グラフにおける単一始点最短路問題を扱う
 * @date   2016/02/18 ~ 2016/03/12
 */



//****************************************
// インクルードガード
//****************************************

#ifndef __DSP_HPP__
#define __DSP_HPP__



//****************************************
// 必要なヘッダファイルのインクルード
//****************************************

#include "../graph/graph.hpp"



//****************************************
// 名前空間の始端
//****************************************

GRAPH_BEGIN



//****************************************
// 関数の宣言
//***************************************

/**
 * @brief  重み付き有向非巡回グラフG = (V, E)の辺を頂点のトポロジカルソート順に緩和することで、
 *         単一始点からすべての頂点に至るすべての最短路を全体でΘ(V + E)時間で計算できる
 *         負辺があっても負閉路が存在しないから、最短路は有向非巡回グラフ上では常に明確に定義される
 *
 * @note   このアルゴリズムはまず有効非巡回グラフに対してトポロジカルソートを行い、頂点を線形に順序づける
 *         頂点uから頂点vへの道があれば、トポロジカルソートではuはvに先行する
 *         このアルゴリズムは全頂点をトポロジカルソート順に一度だけ走査する. 各頂点を検討するとき、その頂点から出るすべての辺を緩和する
 *
 * @note   このアルゴリズムの総実行時間はΘ(V + E)である
 *
 * @param  const graph_t& G 重み付き有向非巡回グラフG
 * @param  index_t        s 始点s
 */
std::pair<indices_t, array_t>  dsp(const graph_t& G, index_t s);



//****************************************
// 名前空間の終端
//****************************************

GRAPH_END



#endif  // __DSP_HPP__

